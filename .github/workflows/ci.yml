name: CI
'on':
  workflow_dispatch: null
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  Setup:
    strategy:
      matrix:
        go-version: [1.20.x]
        platform: [ubuntu-latest]

    runs-on: ${{ matrix.platform }}

    steps:
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

  Tidy:
    strategy:
      matrix:
        go-version: [1.20.x]
        platform: [ubuntu-latest]

    runs-on: ${{ matrix.platform }}
    needs: [Setup]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Tidy
      shell: bash
      run: |
          go mod tidy
          STATUS=$(git status --porcelain go.mod go.sum)
          if [ ! -z "$STATUS" ]; then
            echo "not ok"
            exit 1
          else
            echo "ok"
          fi

  Format:
    strategy:
      matrix:
        go-version: [1.20.x]
        platform: [ubuntu-latest]

    runs-on: ${{ matrix.platform }}
    needs: [Setup]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Format
      shell: bash
      run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "not ok"
            exit 1
          else
            echo "ok"
          fi

  Lint:
    strategy:
      matrix:
        go-version: [1.20.x]
        platform: [ubuntu-latest]

    runs-on: ${{ matrix.platform }}
    needs: [Setup]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.52.2

  Integration_Test:
    strategy:
      matrix:
        go-version: [1.20.x]
        platform: [ubuntu-latest]
    env:
      FORM3_ACCOUNT_API_URL: 'http://localhost:8080'
      TEST_DATABASE_HOST: 'localhost'
      TEST_DATABASE_USERNAME: 'interview_accountapi_user'
      TEST_DATABASE_PASSWORD: '123'
      TEST_DATABASE_NAME: 'interview_accountapi'
      TEST_DATABASE_PORT: '5432'
      TEST_DATABASE_SSL_MODE: 'disable'

    runs-on: ${{ matrix.platform }}
    needs: [Setup]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Docker Compose
      uses: isbang/compose-action@v1.4.1
      with:
        services: |
          accountapi
    - name: Test
      run: |
          go test -race -shuffle=on -parallel 16 -v ./... -tags=unit,integration -coverprofile=coverage.out
    - name: Coverage
      run: |
          go tool cover -html=coverage.out
          threshold=2
          totalCoverage=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
          echo "Coverage threshold : $threshold %"
          echo "Current coverage : $totalCoverage %"
          if (( $(echo "$totalCoverage $threshold | awk '{print ($1 > $2)}') )); then
              echo "ok"
          else
              echo "not ok"
              exit 1
          fi
